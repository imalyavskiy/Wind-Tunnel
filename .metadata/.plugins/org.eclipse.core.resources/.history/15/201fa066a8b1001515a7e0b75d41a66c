package org.demons.gui;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.GridLayout;

import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTextArea;

import org.demons.gui.ArduinoStatSummary.Listing;
import org.demons.utils.MegaConstants;
import org.zu.ardulink.Link;
import org.zu.ardulink.protocol.IProtocol;

import com.sun.corba.se.impl.orbutil.threadpool.TimeoutException;

class HistoryValuesPanel extends JPanel {
	private static final long serialVersionUID = -2739228960818599179L;
	private Link link = null;
	
	private final int PADDING = 10;
	
	private Font titleFont, regularFont, tableFont;
	
	private JLabel title;
	private JPanel descBar;
	private JPanel speedPanel, timePanel, liftPanel, dragPanel;
	private JScrollPane scrollPane;
	private JTextArea speedText, timeText, liftText, dragText;

	public HistoryValuesPanel(int width, int height) {
		super();
		
		setLayout(null);
		setSize(width, height);
		
		titleFont = new Font("Century", Font.BOLD, 14);
		regularFont = new Font("Dialog", Font.BOLD, 14);
		tableFont = new Font("Dialog", Font.BOLD, 12);
		
		title = new JLabel("HISTORY OF VALUES", JLabel.CENTER);
		title.setFont(titleFont);
		title.setBounds(PADDING, PADDING, width-2*PADDING, 15);
		title.setForeground(Color.BLUE);
		
		descBar = new JPanel();
		descBar.setLayout(new GridLayout(1, 4));
		JLabel time = new JLabel("Time");
		time.setFont(tableFont);
		JLabel speed = new JLabel("Speed");
		speed.setFont(tableFont);
		JLabel lift = new JLabel("Lift");
		time.setFont(tableFont);
		JLabel drag = new JLabel("Drag");
		speed.setFont(tableFont);
		descBar.add(time);
		descBar.add(new JSeparator(JSeparator.VERTICAL));
		descBar.add(speed);
		descBar.add(new JSeparator(JSeparator.VERTICAL));
		descBar.add(lift);
		descBar.add(new JSeparator(JSeparator.VERTICAL));
		descBar.add(drag);
		descBar.setBounds(PADDING, PADDING+title.getHeight(), width-2*PADDING, tableFont.getSize()+2);

		scrollPane = new JScrollPane();
		scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
		scrollPane.setBounds(PADDING, 2*PADDING+title.getHeight()+descBar.getHeight(), width-2*PADDING, height-3*PADDING-title.getHeight()-descBar.getHeight());
		
		timePanel = new JPanel();
		speedPanel = new JPanel();
		liftPanel = new JPanel ();
		dragPanel = new JPanel ();
		
		scrollPane.add(timePanel);
		scrollPane.add(speedPanel);
		scrollPane.add(liftPanel);
		scrollPane.add(dragPanel);	
		
		timeText = new JTextArea(10,10);
		speedText = new JTextArea(10,10);
		liftText = new JTextArea(10,10);
		dragText = new JTextArea(10,10);
		
		add(title);
		add(descBar);
		add(scrollPane);
		
		repaint();
	}
	
	public HistoryValuesPanel(int width, int height, Font f) {
		this(width, height);
		titleFont = f;
		title.setFont(f);
		repaint();
	}
	
	
	@Override
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
		g.setColor(Color.GRAY);
		g.fillRect(0, 0, getWidth(), getHeight());
	}
}
