package org.demons.test;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

import org.zu.ardulink.Link;
import org.zu.ardulink.event.ConnectionEvent;
import org.zu.ardulink.event.ConnectionListener;
import org.zu.ardulink.event.DigitalReadChangeEvent;
import org.zu.ardulink.event.DigitalReadChangeListener;
import org.zu.ardulink.event.DisconnectionEvent;

public class PinListings {
	static Link link;
	
	public static void init() {
		// Set Nimbus look and feel
		try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {}

		String portCOM = new SerialConnectionJDialog(new JFrame(), "Arduino Connection", "Select the COM port").port;
		if (portCOM == null || "".equals(portCOM)) {
            JOptionPane.showMessageDialog(null, "Invalid COM PORT setted.", "Error", JOptionPane.ERROR_MESSAGE);
        }
		
		link = Link.getDefaultInstance();
		
		link.addConnectionListener(new ConnectionListener() {
			
			@Override
			public void disconnected(DisconnectionEvent e) {
				System.out.println("Board disconnected");
			}
			
			@Override
			public void connected(ConnectionEvent e) {
				System.out.println("Board connected");
			}
		});
		
		link.connect(portCOM);
	}
	
	public static void main(String[] args) {
		init();
		
		link.addDigitalReadChangeListener(new DigitalReadChangeListener() {
			
			@Override
			public void stateChanged(DigitalReadChangeEvent e) {
				System.out.println(e.getValue());
			}
			
			@Override
			public int getPinListening() {
				return 3;
			}
		})
	}

}
